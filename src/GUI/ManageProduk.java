/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
/**
 *
 * @author HP 14S
 */
public class ManageProduk extends javax.swing.JFrame {

    /**
     * Creates new form ManageProduk
     */
    public ManageProduk() {
        initComponents();
        loadDataToTable(); 
    }
    private void closeResources(ResultSet rs, PreparedStatement pst, Connection conn) {
    try {
        if (rs != null && !rs.isClosed()) rs.close();
    } catch (SQLException e) {}
    
    try {
        if (pst != null && !pst.isClosed()) pst.close();
    } catch (SQLException e) {}
    
    try {
        if (conn != null && !conn.isClosed()) conn.close();
    } catch (SQLException e) {}
    }
  
    
   private void loadDataToTable() {
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    try {
        conn = Koneksi.getConnection();
        String query = "SELECT * FROM produk";
        pst = conn.prepareStatement(query);
        rs = pst.executeQuery();
        
        DefaultTableModel model = (DefaultTableModel) loadTable.getModel();
        model.setRowCount(0);
        
        while (rs.next()) {
            Object[] row = {
                rs.getString("id"),
                rs.getString("nama"),
                rs.getString("kondisi"),
                rs.getDouble("harga"),
                rs.getInt("stok")
            };
            model.addRow(row);
        }
        
    } catch (SQLException e) {
    System.out.println("Database error: " + e.getMessage());
    JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        closeResources(rs, pst, conn);
    }
}
   
  private void clearFields() {
    idMakan.setText("");
    txtNamaMinum.setText("");
    Kondisi.setSelectedIndex(0); // Akan select "Baik"
    HargaMakanan.setText("");
    Stok.setText("");
    idMakan.requestFocus();
}
  
    private void refreshTable() {
    javax.swing.SwingUtilities.invokeLater(() -> {
        try {
            Thread.sleep(50);
            loadDataToTable();
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    });
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HargaMakanan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Stok = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Kondisi = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        loadTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        DeleteBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        EditBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        idMakan = new javax.swing.JTextField();
        txtNamaMinum = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HargaMakanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HargaMakananHarga_Sewa(evt);
            }
        });

        jLabel3.setText("ID Minum/Makan         :");

        jLabel4.setText("Nama Minum/Makan    :");

        Kondisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Baik", "Rusak" }));

        jLabel6.setText("Kondisi            :");

        loadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nama", "Kondisi", "Harga", "Stok"
            }
        ));
        loadTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadTableMouseClicked(evt);
            }
        });
        loadTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                loadTableComponentShown(evt);
            }
        });
        loadTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                loadTableInputMethodTextChanged(evt);
            }
        });
        jScrollPane2.setViewportView(loadTable);
        if (loadTable.getColumnModel().getColumnCount() > 0) {
            loadTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            loadTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            loadTable.getColumnModel().getColumn(2).setPreferredWidth(30);
            loadTable.getColumnModel().getColumn(4).setPreferredWidth(35);
        }

        jLabel8.setText("Harga             :");

        DeleteBtn.setText("DELETE");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtn(evt);
            }
        });

        jLabel9.setText("Stok                :");

        EditBtn.setText("EDIT");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtn(evt);
            }
        });

        jButton3.setText("SAVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3SaveBtn(evt);
            }
        });

        idMakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idMakan(evt);
            }
        });

        txtNamaMinum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaMinum(evt);
            }
        });

        jLabel1.setText("Manajemen Produk");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Stok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HargaMakanan, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Kondisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNamaMinum)
                                        .addComponent(idMakan, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EditBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeleteBtn))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idMakan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNamaMinum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Kondisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HargaMakanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(EditBtn)
                    .addComponent(DeleteBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HargaMakananHarga_Sewa(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HargaMakananHarga_Sewa
        // TODO add your handling code here:
    }//GEN-LAST:event_HargaMakananHarga_Sewa

    private void loadTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadTableMouseClicked
        // TODO add your handling code here:
          int selectedRow = loadTable.getSelectedRow();
    if (selectedRow != -1) {
        idMakan.setText(loadTable.getValueAt(selectedRow, 0).toString());
        txtNamaMinum.setText(loadTable.getValueAt(selectedRow, 1).toString());
        Kondisi.setSelectedItem(loadTable.getValueAt(selectedRow, 2).toString());
        HargaMakanan.setText(loadTable.getValueAt(selectedRow, 3).toString());
        Stok.setText(loadTable.getValueAt(selectedRow, 4).toString());
    }

    }//GEN-LAST:event_loadTableMouseClicked

    private void loadTableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_loadTableComponentShown

    }//GEN-LAST:event_loadTableComponentShown

    private void loadTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_loadTableInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_loadTableInputMethodTextChanged

    private void DeleteBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtn
        // TODO add your handling code here:
        
        
         int selectedRow = loadTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus!");
        return;
    }
    
    int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            String id = loadTable.getValueAt(selectedRow, 0).toString();
            
            Connection conn = Koneksi.getConnection();
            String query = "DELETE FROM produk WHERE id=?";
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, id);
            
            pst.executeUpdate();
            pst.close();
            conn.close();
            
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
            clearFields();
            refreshTable(); // Ganti ini
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    }//GEN-LAST:event_DeleteBtn

    
    
    private void EditBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtn
        // TODO add your handling code here:
       int selectedRow = loadTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data yang akan diedit!");
        return;
    }
    
    try {
        String id = idMakan.getText().trim();
        String nama = txtNamaMinum.getText().trim();
        String kondisi = Kondisi.getSelectedItem().toString();
        double harga = Double.parseDouble(HargaMakanan.getText().trim());
        int stok = Integer.parseInt(Stok.getText().trim());
        
        Connection conn = Koneksi.getConnection();
        // PERBAIKAN: Query yang benar (hapus "=?" yang berlebihan)
        String query = "UPDATE produk SET nama=?, kondisi=?, harga=?, stok=? WHERE id=?";
        PreparedStatement pst = conn.prepareStatement(query);
        pst.setString(1, nama);
        pst.setString(2, kondisi);
        pst.setDouble(3, harga);
        pst.setInt(4, stok);
        pst.setString(5, id);
        
        pst.executeUpdate();
        pst.close();
        conn.close();
        
        JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
        clearFields();
        refreshTable();
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Harga dan Stok harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_EditBtn

    private void jButton3SaveBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3SaveBtn
        // TODO add your handling code here:
    try {
        // Validasi input
        if (idMakan.getText().trim().isEmpty() || 
            txtNamaMinum.getText().trim().isEmpty() || 
            HargaMakanan.getText().trim().isEmpty() || 
            Stok.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String id = idMakan.getText().trim();
        String nama = txtNamaMinum.getText().trim();
        String kondisi = Kondisi.getSelectedItem().toString();
        double harga = Double.parseDouble(HargaMakanan.getText().trim());
        int stok = Integer.parseInt(Stok.getText().trim());
        
        Connection conn = Koneksi.getConnection();
        String query = "INSERT INTO produk (id, nama, kondisi, harga, stok ) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement pst = conn.prepareStatement(query);
        pst.setString(1, id);
        pst.setString(2, nama);
        pst.setString(3, kondisi);
        pst.setDouble(4, harga);
        pst.setInt(5, stok);
        
        pst.executeUpdate();
        pst.close();
        conn.close();
        
       JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
        clearFields();
        refreshTable(); // Ganti ini
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Harga dan Stok harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_jButton3SaveBtn

    private void idMakan(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idMakan
        // TODO add your handling code here:
        txtNamaMinum.requestFocus();
    }//GEN-LAST:event_idMakan

    private void txtNamaMinum(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaMinum
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaMinum

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProduk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProduk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JTextField HargaMakanan;
    private javax.swing.JComboBox<String> Kondisi;
    private javax.swing.JTextField Stok;
    private javax.swing.JTextField idMakan;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable loadTable;
    private javax.swing.JTextField txtNamaMinum;
    // End of variables declaration//GEN-END:variables
}
